tags:
  name: Admin
  description: Admin router for general management, available only to administrators

/admin/blog:
  post:
    summary: Creates a new blog post
    tags: [Admin]
    responses:
      200:
        description: The created blog post
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '../blog.yaml#/components/schemas/Blog'
/admin/blog/{id}:
  delete:
    summary: Deletes a blog post
    tags: [Admin]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: ID of the blog post
    responses:
      200:
        description: The deleted blog post
        content:
          application/json:
            schema:
              type: object
              items:
                $ref: '../blog.yaml#/components/schemas/Blog'
      404:
        description: Blog not found

/admin/CDN/{filename}:
  post:
    summary: Uploads an file from buffer to CDN
    tags: [Admin]
    requestBody:
      required: true
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    responses:
      200:
        description: File uploaded successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                fileUrl:
                  type: string
      500:
        description: Error

/admin/CDN:
  get:
    summary: Get list of all items in CDN
    tags: [Admin]
    responses:
      200:
        description: All items successfully received
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      500:
        description: Error

/admin/topics:
  post:
    summary: Add a topic
    tags: [Admin]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              topic:
                type: string

/admin/products:
  post:
    summary: Add a product
    tags: [Admin]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: "../products.yaml#/components/schemas/Product"
    responses:
      200:
        description: Added product
        content:
          application/json:
            schema:
              type: object
              $ref: "../products.yaml#/components/schemas/Product"

/admin/products/{id}:
  put:
    summary: Modify a product
    tags: [Admin]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: ID of the product
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: "../products.yaml#/components/schemas/Product"
    responses:
      200:
        description: New product
        content:
          application/json:
            schema:
              type: object
              $ref: "../products.yaml#/components/schemas/Product"
      404:
        description: Product not found
  delete:
    summary: Delete a product
    tags: [Admin]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: ID of the product
    responses:
      200:
        description: Deleted product
        content:
          application/json:
            schema:
              type: object
              $ref: "../products.yaml#/components/schemas/Product"
      404:
        description: Product not found

/admin/products/discount:
  post:
    summary: Add a discount
    tags: [Admin]
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: "../products.yaml#/components/schemas/Discount"
    responses:
      200:
        description: Added discount
        content:
          application/json:
            schema:
              type: object
              $ref: "../products.yaml#/components/schemas/Discount"

/admin/products/discount/{id}:
  put:
    summary: Modify a discount
    tags: [Admin]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: ID of the discount
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            $ref: "../products.yaml#/components/schemas/Discount"
    responses:
      200:
        description: New discount
        content:
          application/json:
            schema:
              type: object
              $ref: "../products.yaml#/components/schemas/Discount"
      404:
        description: Discount not found
  delete:
    summary: Delete a discount
    tags: [Admin]
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: ID of the discount
    responses:
      200:
        description: Deleted discount
        content:
          application/json:
            schema:
              type: object
              $ref: "../products.yaml#/components/schemas/Discount"
      404:
        description: Discount not found

/admin/events:
  get:
    tags: [Admin]
    summary: Get all events awaiting approval
    responses:
      200:
        description: Events
        content:
          application/json:
            schema:
              type: object
              $ref: "./events.yaml#/components/schemas/ReturnedEvent"

/admin/events/{id}:
  patch:
    tags: [Admin]
    summary: Update event
    parameters:
      - in: path
        name: id
        description: Event ID
        schema:
          type: string
    requestBody:
      required: true
      description: All fields are optional
      content:
        application/json:
          schema:
            $ref: './events.yaml#/components/schemas/Event'
    responses:
      200:
        description: Updated event
        content:
          application/json:
            schema:
              $ref: './events.yaml#/components/schemas/ReturnedEvent'
      404:
        description: Event not found
  delete:
    tags: [Admin]
    summary: Delete event
    parameters:
      - in: path
        name: id
        description: Event ID
        schema:
          type: string
    responses:
      200:
        description: Deleted event
        content:
          application/json:
            schema:
              $ref: './events.yaml#/components/schemas/ReturnedEvent'
      404:
        description: Event not found

/admin/events/approve/{id}:
  post:
    tags: [Admin]
    summary: Approves an awaiting event
    parameters:
      - in: path
        name: id
        description: Event ID
        schema:
          type: string
    responses:
      200:
        description: Event succesfully approved
        content:
          application/json:
            schema:
              $ref: './events.yaml#/components/schemas/ReturnedEvent'
      400:
        description: Event not awaiting approval
      404:
        description: Event not found
  delete:
    tags: [Admin]
    summary: Reject an awaiting event
    parameters:
      - in: path
        name: id
        description: Event ID
        schema:
          type: string
    responses:
      200:
        description: Event succesfully rejected
        content:
          application/json:
            schema:
              $ref: './events.yaml#/components/schemas/ReturnedEvent'
      400:
        description: Event not awaiting approval
      404:
        description: Event not found